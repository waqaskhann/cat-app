{"ast":null,"code":"var _jsxFileName = \"/Users/waqaskhan/Sites/cat-app/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const {\n    breed,\n    setBreed\n  } = useContext(AppContext);\n  const [breeds, setBreeds] = useState([]);\n  const [cats, setCats] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n  const [prevLocation, setPrevLocation] = useState(history.location);\n  useEffect(() => {\n    // Fetch all available breeds\n    const fetchBreeds = async () => {\n      try {\n        const response = await axios.get('https://api.thecatapi.com/v1/breeds');\n        setBreeds(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBreeds();\n  }, []);\n  useEffect(() => {\n    // Fetch cats based on breed and page number\n    const fetchCats = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`https://api.thecatapi.com/v1/images/search?breed_id=${breed}&limit=10&page=${page}`);\n        setCats(prevCats => [...prevCats, ...response.data]);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n\n    // Only fetch cats if breed is selected and previous location is not the single page\n    if (breed && prevLocation.pathname !== `/${breed}`) {\n      fetchCats();\n    } else {\n      // If breed is not selected or previous location is single page, reset cats and page\n      setCats([]);\n      setPage(1);\n    }\n  }, [breed, page, prevLocation]);\n  useEffect(() => {\n    // Update previous location when location changes\n    const unlisten = history.listen(location => {\n      setPrevLocation(location);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n\n  // Render cat cards\n  const renderCats = () => {\n    if (!breed) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please select a breed from the dropdown.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    }\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading cats...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    }\n    if (cats.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No cats found for the selected breed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }, this);\n    }\n    return cats.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: cat.url,\n        alt: `Cat ${cat.id}`,\n        width: \"300\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", cat.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${cat.id}`,\n        children: \"View details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, cat.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Load more cats\n  const loadMoreCats = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  // Handle breed selection\n  const handleBreedChange = e => {\n    setBreed(e.target.value);\n    setCats([]);\n    setPage(1);\n  };\n  const showLoadMore = cats.length > 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: breed,\n      onChange: handleBreedChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Breed --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), breeds.map(breed => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: breed.id,\n        children: breed.name\n      }, breed.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderCats()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), showLoadMore && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMoreCats,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : 'Load More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"7nnfvkonh1G3EA6k17FK1HVjixM=\", false, function () {\n  return [useHistory];\n});\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useHistory","axios","AppContext","jsxDEV","_jsxDEV","Homepage","_s","breed","setBreed","breeds","setBreeds","cats","setCats","page","setPage","isLoading","setIsLoading","history","prevLocation","setPrevLocation","location","fetchBreeds","response","get","data","error","console","fetchCats","prevCats","pathname","unlisten","listen","renderCats","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","cat","src","url","alt","id","width","height","to","loadMoreCats","prevPage","handleBreedChange","e","target","value","showLoadMore","onChange","name","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/waqaskhan/Sites/cat-app/src/pages/Homepage.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { AppContext } from '../App';\n\nconst Homepage = () => {\n  const { breed, setBreed } = useContext(AppContext);\n  const [breeds, setBreeds] = useState([]);\n  const [cats, setCats] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n  const [prevLocation, setPrevLocation] = useState(history.location);\n\n  useEffect(() => {\n    // Fetch all available breeds\n    const fetchBreeds = async () => {\n      try {\n        const response = await axios.get('https://api.thecatapi.com/v1/breeds');\n        setBreeds(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchBreeds();\n  }, []);\n\n  useEffect(() => {\n    // Fetch cats based on breed and page number\n    const fetchCats = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await axios.get(`https://api.thecatapi.com/v1/images/search?breed_id=${breed}&limit=10&page=${page}`);\n        setCats(prevCats => [...prevCats, ...response.data]);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n\n    // Only fetch cats if breed is selected and previous location is not the single page\n    if (breed && prevLocation.pathname !== `/${breed}`) {\n      fetchCats();\n    } else {\n      // If breed is not selected or previous location is single page, reset cats and page\n      setCats([]);\n      setPage(1);\n    }\n  }, [breed, page, prevLocation]);\n\n  useEffect(() => {\n    // Update previous location when location changes\n    const unlisten = history.listen((location) => {\n      setPrevLocation(location);\n    });\n\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n\n  // Render cat cards\n  const renderCats = () => {\n    if (!breed) {\n      return <div>Please select a breed from the dropdown.</div>;\n    }\n\n    if (isLoading) {\n      return <div>Loading cats...</div>;\n    }\n\n    if (cats.length === 0) {\n      return <div>No cats found for the selected breed.</div>;\n    }\n\n    return cats.map(cat => (\n      <div key={cat.id}>\n        <img src={cat.url} alt={`Cat ${cat.id}`} width=\"300\" height=\"200\" />\n        <p>ID: {cat.id}</p>\n        <Link to={`/${cat.id}`}>View details</Link>\n      </div>\n    ));\n  };\n\n  // Load more cats\n  const loadMoreCats = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  // Handle breed selection\n  const handleBreedChange = (e) => {\n    setBreed(e.target.value);\n    setCats([]);\n    setPage(1);\n  };\n\n  const showLoadMore = cats.length > 10;\n\n  return (\n    <div>\n      <h1>Homepage</h1>\n      <select value={breed} onChange={handleBreedChange}>\n        <option value=\"\">-- Select Breed --</option>\n        {breeds.map(breed => (\n          <option key={breed.id} value={breed.id}>{breed.name}</option>\n        ))}\n      </select>\n      <div>\n        {renderCats()}\n      </div>\n      {showLoadMore &&\n        <button onClick={loadMoreCats} disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Load More'}\n        </button>\n      }\n    </div>\n  );\n};\n\nexport default Homepage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}